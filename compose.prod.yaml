services:
  watchtower:
    image: containrrr/watchtower:latest
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.docker/config.json:/config.json # Auth for private registry
    restart: unless-stopped

  next:
    image: ghcr.io/laurimaila/personal-website:latest
    ports:
      - "4001:3000"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - NODE_ENV=production
    platform: linux/arm64
    restart: unless-stopped

  backend:
    image: ghcr.io/laurimaila/backend-personal-website:latest
    ports:
      - "4000:8080"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - db
      - liquibase
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      CONNECTION_STRING: Host=db;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    restart: unless-stopped

  db:
    image: postgres:17-alpine
    volumes: # Store data in a named docker volume
      - personal-website-data-prod:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped

volumes:
  personal-website-data-prod:
